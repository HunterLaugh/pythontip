'''
给你两个正整数a和b， 输出它们的最小公倍数。

例如：a = 3, b = 5

则输出：15


计算方法：
1、分解质因数法
先把这几个数的质因数写出来，最小公倍数等于它们所有的质因数的乘积（如果有几个质因数相同，则比较两数中哪个数有该质因数的个数较多，乘较多的次数）。
比如求45和30的最小公倍数。

　　45=3*3*5
　　30=2*3*5
　　不同的质因数是2。5，3是他们两者都有的质因数，由于45有两个3，30只有一个3，所以计算最小公倍数的时候乘两个3.
　　最小公倍数等于2*3*3*5=90
　　又如计算36和270的最小公倍数
　　36=2*2*3*3
　　270=2*3*3*3*5
　　不同的质因数是5。2这个质因数在36中比较多，为两个，所以乘两次；3这个质因数在270个比较多，为三个，所以乘三次。
　　最小公倍数等于2*2*3*3*3*5=540
　　20和40的最小公倍数是40
2、公式法
由于两个数的乘积等于这两个数的最大公约数与最小公倍数的积。即（a，b）×[a，b]=a×b。所以，求两个数的最小公倍数，就可以先求出它们的最大公约数，然后用上述公式求出它们的最小公倍数。[4] 
例如，求[18，20]，即得[18，20]=18×20÷（18，20）=18×20÷2=180。求几个自然数的最小公倍数，可以先求出其中两个数的最小公倍数，再求这个最小公倍数与第三个数的最小公倍数，依次求下去，直到最后一个为止。最后所得的那个最小公倍数，就是所求的几个数的最小公倍数。

'''

# 解题思路：分解质因子
# 法一：求质因子的乘积
# 法二：公式法　a*b=最大公倍数*最大公约数

# 求质因子
def divisor(x):
	res=[1]
	miu=int(x**0.5)+2
	for each in range(2,miu):
		while x%each==0:
			res.append(each)
			x=x//each
	if x!=1:
		res.append(x)
	return res
#print(divisor(7))


# 求质因子或集乘积
def least_multiple(a,b):
	res=[]
	li_a=divisor(a)
	li_b=divisor(b)
	for each in li_a:
		if each in li_b:
			res.append(each)
			li_b.remove(each)
	
	for j in res:
		li_a.remove(j)
	
	res=res+li_a+li_b
	
	multiple=1
	for i in res:
		multiple*=i
	return multiple

print(least_multiple(4,6))	
